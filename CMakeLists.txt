CMAKE_MINIMUM_REQUIRED(VERSION 3.0)
PROJECT(sock)


#   Defined global options
OPTION(DEBUG "Generate symbols for debug" OFF)


# Include the sub directorys to build
ADD_SUBDIRECTORY(examples)


#   All headers
SET(HRDS sock.h)
SET_SOURCE_FILES_PROPERTIES(${HRDS} PROPERTIES HEADER_FILE_ONLY YES)


#   Define some vars, they will be used leter
SET(SRCS sock.c
        ${HRDS}
        )
SET(INCS .)
SET(CCDEFS -DSOCK_EXPORTS)


#   Need the debug symbols or not
IF    (DEBUG)
    LIST(APPEND CCDEFS -DDEBUG)
ELSE  (DEBUG)
    LIST(APPEND CCDEFS -DNDEBUG)
ENDIF (DEBUG)


#   Sprcial the language to c++ for VC
IF   (MSVC)
    SET_SOURCE_FILES_PROPERTIES(${SRCS} PROPERTIES LANGUAGE CXX)
ENDIF(MSVC)


#   Special the include dirs and defines
INCLUDE_DIRECTORIES(${INCS})
ADD_DEFINITIONS(${CCDEFS})


#   Defined the targets
ADD_LIBRARY(sock        SHARED ${SRCS})
ADD_LIBRARY(sock-static STATIC ${SRCS})


#   Set the output dirs
SET_TARGET_PROPERTIES(sock        PROPERTIES LIBRARY_OUTPUT_DIRECTORY_DEBUG   ${PROJECT_SOURCE_DIR}/out)
SET_TARGET_PROPERTIES(sock        PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG   ${PROJECT_SOURCE_DIR}/out)
SET_TARGET_PROPERTIES(sock        PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_DEBUG   ${PROJECT_SOURCE_DIR}/out)
SET_TARGET_PROPERTIES(sock        PROPERTIES LIBRARY_OUTPUT_DIRECTORY_RELEASE ${PROJECT_SOURCE_DIR}/out)
SET_TARGET_PROPERTIES(sock        PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE ${PROJECT_SOURCE_DIR}/out)
SET_TARGET_PROPERTIES(sock        PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${PROJECT_SOURCE_DIR}/out)
SET_TARGET_PROPERTIES(sock-static PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_DEBUG   ${PROJECT_SOURCE_DIR}/out)
SET_TARGET_PROPERTIES(sock-static PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${PROJECT_SOURCE_DIR}/out)
